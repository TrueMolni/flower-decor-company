{"version":3,"file":"static/js/763.b35b8cbb.chunk.js","mappings":"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","sources":["webpack://flower-decor-company/./src/modules/Gallery/galery.module.css?281f","modules/Gallery/Galery.jsx","webpack://flower-decor-company/./src/pages/GalleryPage/gallery-page.module.css?69aa","pages/GalleryPage/GalleryPage.jsx","shared/components/PhotoCard/PhotoCard.jsx","webpack://flower-decor-company/./src/shared/components/Title/title.module.css?e9d1","shared/components/Title/Title.jsx","shared/data/galleryData.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"galery_wrapper__Xiz0d\",\"list\":\"galery_list__Y7lpn\",\"item\":\"galery_item__HdkPT\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Title from \"../../shared/components/Title\";\r\nimport PhotoCard from \"../../shared/components/PhotoCard\";\r\n\r\nimport css from \"./galery.module.css\";\r\n\r\nconst Galery = ({ data }) => {\r\n  const galleryCards = data.map(({ img, id }) => (\r\n    <PhotoCard\r\n      key={id}\r\n      customClass={css.item}\r\n      img={img}\r\n      alt={\"Оформлення та дизайн\"}\r\n      width={\"350\"}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section>\r\n      <div className={css.wrapper}>\r\n        <Title size={\"h2\"} title={\"Галерея\"} />\r\n        <ul className={css.list}>{galleryCards}</ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nGalery.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default Galery;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"gallery-page_wrapper__9DAJo\"};","import React from 'react';\r\n\r\nimport Galery from '../../modules/Gallery';\r\n\r\nimport { galleryData } from '../../shared/data/galleryData';\r\n\r\nimport css from './gallery-page.module.css';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <Galery data={galleryData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PhotoCard = ({ img, alt, width, customClass, imageClass }) => {\r\n  return (\r\n    <div className={customClass}>\r\n      <img className={imageClass} width={width} src={img} alt={alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoCard;\r\n\r\nPhotoCard.propTypes = {\r\n  img: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  width: PropTypes.string,\r\n  customClass: PropTypes.string,\r\n  imageClass: PropTypes.string,\r\n};\r\n\r\nPhotoCard.defaultProps = {\r\n  img: \"\",\r\n  alt: \"company picture\",\r\n  width: \"592\",\r\n  customClass: \"\",\r\n  imageClass: \"\",\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mainTitle\":\"title_mainTitle__tVbrW\",\"title\":\"title_title__B53rT\",\"subTitle\":\"title_subTitle__+18rZ\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport css from \"./title.module.css\";\r\n\r\nconst Title = ({ title, size, customClass }) => {\r\n  const markup = (size) => {\r\n    switch (size) {\r\n      case \"h1\":\r\n        return (\r\n          <h1\r\n            className={\r\n              !customClass ? css.mainTitle : css.mainTitle + \" \" + customClass\r\n            }\r\n          >\r\n            {title}\r\n          </h1>\r\n        );\r\n\r\n      case \"h2\":\r\n        return (\r\n          <h2\r\n            className={!customClass ? css.title : css.title + \" \" + customClass}\r\n          >\r\n            {title}\r\n          </h2>\r\n        );\r\n\r\n      case \"h3\":\r\n        return <h3 className={css.subTitle}>{title}</h3>;\r\n\r\n      default:\r\n        return <h4 className={css.subTitle}>{title}</h4>;\r\n    }\r\n  };\r\n\r\n  return <>{markup(size)}</>;\r\n};\r\n\r\nexport default Title;\r\n\r\nTitle.defaultProps = {\r\n  title: \"Light, Fast & Powerful\",\r\n  size: \"h1\",\r\n  customClass: \"\",\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  size: PropTypes.string,\r\n  customClass: PropTypes.string,\r\n};\r\n","import { nanoid } from \"nanoid\";\r\n\r\nimport image1_1x from \"../images/gallery/gallery1_1x.jpg\";\r\nimport image2_1x from \"../images/gallery/gallery2_1x.jpg\";\r\nimport image3_1x from \"../images/gallery/gallery3_1x.jpg\";\r\nimport image4_1x from \"../images/gallery/gallery4_1x.jpg\";\r\nimport image5_1x from \"../images/gallery/gallery5_1x.jpg\";\r\nimport image6_1x from \"../images/gallery/gallery6_1x.jpg\";\r\n\r\nexport const galleryData = [\r\n  { id: nanoid(), img: image1_1x },\r\n  { id: nanoid(), img: image2_1x },\r\n  { id: nanoid(), img: image3_1x },\r\n  { id: nanoid(), img: image4_1x },\r\n  { id: nanoid(), img: image5_1x },\r\n  { id: nanoid(), img: image6_1x },\r\n];\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_ref","galleryCards","data","map","_ref2","img","id","_jsx","PhotoCard","customClass","css","alt","width","children","_jsxs","className","Title","size","title","Galery","galleryData","imageClass","src","defaultProps","_Fragment","markup","nanoid","image1_1x","image2_1x","image3_1x","image4_1x","image5_1x","image6_1x","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}